###############################################################################
# Conférence OCaml - 11 octobre 2013         Philemon GARDET -  Rafael GOZLAN #
###############################################################################

###############################################################################
# Plan ########################################################################
> Introduction : Pourquoi faire du OCaml [Philemon]
     Programmation Fonctionnelle : (en vrac pour l'instant)
          Fonctions pures (Non effet de bords) - Non modification d'état
          Unitarité des fonctions (indépendante car sans utiliser autre chose 
	que l'entrée).
          Récursivité
     "Powered by OCaml" :
          Impure (possibilité de faire de l'impératif)
          Exécution : Interprété/Byte-code/natif
          (pratiquement aussi rapide que du C)
          Logiciel Libre 
          "Produit du terroir" 

> 0 - Rappel Partie Fonctionnelle [15 mins] [Rafael] (zaper des slides en 
	fonction du public) : 
     Valeurs, déclarations, listes... (zappable)
     Structure de contrôle (zappable)
     Polymorphisme (zappable)
     Filtrage (zappable)
     Les types (enregistrement, somme, recursifs, parametrer)
     Les exceptions (failwith, déclaration, récupération)
     Tricks (Paramètres optionnels, d'autres truc ?)
> 1 - L'aspect Impératif [5 mins] [Rafeal] :
     Séquences (gneeeeee-hautement zappable)
     Tricks (let _ = ... par exemple)
     Entrées-sorties (gneeeeee)
     Boucles
> 2 Structures de donnes [5-10 mins] [Rafael] :
     Vecteurs
     Piles/Files
     Tables de Hachages
> 3 - L'aspect Objet [30 mins] [Philemon] :
     Explication POO
     Déclaration d'objets :
          Création d'instance
          Syntaxe
          Attribut (normal/mutable/option)
          Méthodes (normal/privée-accesLocal)
          Initialisation
          Attributs polymorphes (classes paramétrée)
     Héritages
     Polymorphisme de sous-type
> 4 - La programmation Modulaire [15-20 mins] [Philemon] :
     Les modules
     Utilisation des modules (open... et sans)
     Les fichiers interface
     La compilation
     Générer de la doc
> 5 - La Bibliothèque SDL [45-60 mins] [Philemon] :
     Introduction : objectif - principe des surface
     Initialisation
     ....

> Conclusion : Les choses qu'on n'a pas abordées (libs, stdlib, liens)

###############################################################################
# TPs #########################################################################

> Sup/Spe : La programmation objet

> Sup : SDL is fun
> Spe : SDL et traitement d'images

###############################################################################
# Notes / Infos ###############################################################
